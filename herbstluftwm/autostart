#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

export TERMINAL=kitty

# Start compositor
picom --experimental-backends &

# Variables
Alt=Mod1   # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

# Keybinds
# mouse
hc mouseunbind --all
hc mousebind $Mod-B1 move
hc mousebind $Mod-B2 zoom
hc mousebind $Mod-B3 resize
# remove all existing keybindings
hc keyunbind --all
# basic functions
hc keybind $Mod-Shift-e quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Alt-Tab     cycle_all +1

# media keys
hc keybind XF86AudioRaiseVolume spawn amixer sset Master 1%+
hc keybind XF86AudioLowerVolume spawn amixer sset Master 1%-
hc keybind XF86AudioMute spawn amixer sset Master toggle

# backlight control
hc keybind XF86MonBrightnessUp spawn ~/.config/herbstluftwm/brightness inc
hc keybind XF86MonBrightnessDown spawn ~/.config/herbstluftwm/brightness dec

# application shortcuts
hc keybind $Mod-Return spawn "$TERMINAL" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-d spawn rofi -show run # application launcher
hc keybind $Mod-Shift-d spawn rofi -show drun # application launcher, desktop mode
hc keybind $Mod-Shift-s spawn ~/.config/herbstluftwm/scrsht

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-h     focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-j     focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-k     focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-l     focus right
# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-l     shift right
# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   right  0.5
hc keybind $Mod-o       split   bottom   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode
# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-Shift-space fullscreen toggle
hc keybind $Mod-f set_attr clients.focus.floating toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1


# Frame
hc set frame_bg_transparent       on
hc set frame_padding              0
hc set frame_border_width         0
hc set frame_border_inner_width   0
hc set frame_transparent_width    0
hc set frame_border_active_color  '#15151500'
hc set frame_border_normal_color  '#15151500'
hc set show_frame_decorations     none

# Border (theme)
hc attr theme.border_width          1
hc attr theme.outer_width           1
hc attr theme.active.outer_color    '#151515'
hc attr theme.normal.outer_color    '#151515'
#hc attr theme.floating.border_width 0

# Title (theme)
hc attr theme.title_height  15
hc attr theme.title_when    always
hc attr theme.active.color  '#151515'
hc attr theme.normal.color  '#424242'
hc attr theme.title_color   '#e8e3e3'
hc attr theme.title_align   center
hc attr theme.title_font    'Source Han Sans JP Medium:pixelsize=12'
hc attr theme.title_depth   10

# Settings
hc set window_gap               5
hc set frame_gap                0
hc set focus_follows_mouse      1
hc set update_dragged_clients   1
hc set smart_frame_surroundings hide_all
hc set_layout                   horizontal

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# set the wallpaper
feh --bg-scale ~/Pictures/wallpapers/3.png &

# touchpad configurations
xinput set-prop 11 275 1 # tapping
xinput set-prop 11 283 1 # natural scroll
xinput set-prop 11 299 35 # scrolling distance

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# launch polkit agent
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

# launch bar
~/.config/polybar/launch.sh &
